#!/bin/sh

CONFFILE="/opt/etc/nfqws/nfqws.conf"
INIT_SCRIPT="/opt/etc/init.d/S51nfqws"
INIT_SCRIPT_OWRT="/opt/etc/init.d/nfqws-keenetic"
BINFILE="/opt/usr/bin/nfqws"
API_URL="http://localhost:79/rci/"

stop_func() {
  if [ -f "$INIT_SCRIPT" ]; then
    $INIT_SCRIPT stop
  elif [ -f "$INIT_SCRIPT_OWRT" ]; then
    $INIT_SCRIPT_OWRT stop
  fi
}

start_func() {
  if [ -f "$INIT_SCRIPT" ]; then
    $INIT_SCRIPT start
  elif [ -f "$INIT_SCRIPT_OWRT" ]; then
    $INIT_SCRIPT_OWRT start
  fi
}

isp_interface_func() {
  route | grep '^default' | grep -o '[^ ]*$'
}

ipv6_enabled_func() {
  # $1 - interface, e.g. eth3
  enabled=$(ip -f inet6 addr show dev "$1" 2>/dev/null | grep "scope global")
  return $([ -z "$enabled" ])
}

install_config_func() {
  local NFQWS_INSTALL_TYPE="install"
  if [ -f "/opt/tmp/nfqws_install_type" ]; then
    # Set in preinst script
    NFQWS_INSTALL_TYPE=$(cat "/opt/tmp/nfqws_install_type")
    rm -f "/opt/tmp/nfqws_install_type"
  fi

  if [ "$NFQWS_INSTALL_TYPE" = "install" ]; then
    # Interface
    local DEF_IFACE=$(isp_interface_func)
    sed -i -E "s#^ISP_INTERFACE=\".+\"#ISP_INTERFACE=\"$DEF_IFACE\"#" $CONFFILE
    echo "Detected ISP interface: $DEF_IFACE"

    # IPv6
    local IPV6=$(ipv6_enabled_func "$DEF_IFACE" && echo 1 || echo 0)
    sed -i -E "s#^IPV6_ENABLED=([0-9]+)#IPV6_ENABLED=$IPV6#" $CONFFILE
    echo "Detected IPv6: $IPV6"

    echo "Current working mode: auto"
    echo "You can change settings in the configuration file: $CONFFILE"

    echo "Installation successful"
  fi
}

install_binary_func() {
  local OPKG_CONF="/opt/etc/opkg.conf"
  local OWRT_FEEDS="/opt/etc/opkg/distfeeds.conf"
  local ARCH=

  if [ -f "$OPKG_CONF" ]; then
    ARCH=$(cat "$OPKG_CONF" | grep -oE 'mips-3|mips_|mipsel-3|mipsel_|aarch64-3|aarch64_|armv7|arm_|i386|i686|x86_64' | head -n 1)
  fi
  if [ -z "$ARCH" ] && [ -f "$OWRT_FEEDS" ]; then
    ARCH=$(cat "$OWRT_FEEDS" | grep -oE 'mips_|mipsel_|aarch64_|arm_|i386|x86_64' | head -n 1)
  fi
  if [ -n "$ARCH" ]; then
    case "$ARCH" in
      "mips-3"|"mips_") ARCH="mips" ;;
      "mipsel-3"|"mipsel_") ARCH="mipsel" ;;
      "aarch64-3"|"aarch64_") ARCH="aarch64" ;;
      "armv7"|"arm_") ARCH="armv7" ;;
      "i386"|"i686") ARCH="x86" ;;
      "x86_64") ARCH="x86_64" ;;
    esac
  fi

  if [ -z $ARCH ]; then
    ARCH=$(uname -m | grep -oE 'mips|mipsel|aarch64|armv7|i386|i686|x86_64|rlx')
    if [ "$ARCH" == "rlx" ]; then
      ARCH="lexra"
    elif [ "$ARCH" == "mips" ]; then
      if grep -qE 'system type.*MediaTek' /proc/cpuinfo; then
        ARCH="mipsel"
      fi
    elif [ "$ARCH" == "i386" ] || [ "$ARCH" == "i686" ]; then
      ARCH="x86"
    fi
  fi

  if [ -z $ARCH ]; then
    echo "Failed to detect architecture"
    exit 1
  fi

  echo "Detected arch: $ARCH"

  cp -f "/opt/tmp/nfqws_binary/nfqws-$ARCH" "$BINFILE"
  chmod +x "$BINFILE"
  rm -rf "/opt/tmp/nfqws_binary"
}

post_api() {
  data="$1"
  query="${2:-}"

  if [ -z "$data" ]; then
    result=$(curl -s "$API_URL$query")
  else
    result=$(curl -s -d "$data" "$API_URL$query")
  fi

  if ! echo "$result" | grep -q "success"; then
    echo "Error: Failed to execute POST request"
    return 1
  fi

  echo "$result"
}

get_api() {
  query="$1"
  result=$(curl -s "$API_URL$query")

  if ! echo "$result" | grep -q "success"; then
    echo "Error: Failed to execute GET request"
    return 1
  fi

  echo "$result"
}

# Install system packages
install_system_package() {
  packages="opkg-kmod-netfilter ip6"

  until status=$(post_api "" "components/list") && echo "$status" | grep -q "continued"; do
    echo "Error: Failed to execute post_api request."
    sleep 3
  done

  for package in $packages; do
    if ! grep -q "<name>${package}</name>" /etc/components.xml; then
      attempt=0
      while [ $attempt -lt 5 ]; do
        data='[{"components": {"install": {"component": "'"$package"'"}}}]'
        result=$(post_api "$data")
        echo "${result}"

        if ! echo "$result" | grep -q "is unavailable"; then
          break
        fi

        attempt=$((attempt + 1))
        sleep 2
      done

      if [ $attempt -eq 5 ]; then
        echo "Error: package $package unavailable after 5 attempts."
      fi
    fi
  done

  if ! post_api '[{"components": {"commit": true}}]' > /dev/null 2>&1; then
    echo "Error: Failed to commit changes."
    return 1
  fi
  sleep 5

  status=$(get_api "show/components/status")
  if echo "$status" | grep -q "request failed (507)"; then
    echo "Not enough memory to install system packages"
    return 1
  fi

  echo "System will be rebooted"
}


# Stop entware service
if [ -f "$INIT_SCRIPT" ]; then
  stop_func
fi

# Install binary for multiplatform package
if [ -f "/opt/tmp/nfqws_binary/nfqws-x86" ]; then
  install_binary_func
fi

# Install configuration
install_config_func

# Start entware service
if [ -f "$INIT_SCRIPT" ]; then
  install_system_package
  start_func
fi

exit 0
