#!/bin/sh

. /opt/etc/nfqws/nfqws.conf

NFQWS_BIN=/opt/usr/bin/nfqws

is_running() {
  PID_RUNNING=$(pgrep -nx "$NFQWS_BIN" 2>/dev/null)

  if [ -z "$PID_RUNNING" ]; then
    return 1
  fi

  if [ ! -f "$PIDFILE" ]; then
    return 1
  fi

  PID_SAVED=$(cat "$PIDFILE")

  if [ "$PID_RUNNING" -ne "$PID_SAVED" ]; then
    return 1
  fi

  if ! kill -0 $(cat "$PIDFILE"); then
    return 1
  fi

  # 0 = true, 1 = false
  return 0
}

start() {
  if is_running; then
    echo 'Service NFQWS is already running' >&2
    return 1
  fi

  kernel_modules_load

  LOGGING=""
  if [ "$LOG_LEVEL" -eq "1" ]; then
    LOGGING="--debug=syslog"
  fi
  $NFQWS_BIN --daemon $LOGGING --user=nobody --qnum=$NFQUEUE_NUM --pidfile=$PIDFILE $NFQWS_ARGS $NFQWS_EXTRA_ARGS

  firewall_start_v4
  firewall_start_v6
  system_config

  echo 'Started NFQWS service'
}

stop() {
  firewall_stop_v4
  firewall_stop_v6

  if ! is_running; then
    echo 'Service NFQWS is not running' >&2
    return 1
  fi

  echo 'Stopping NFQWS service...'
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
}

reload() {
  if ! is_running; then
    echo 'Service NFQWS is not running' >&2
    return 1
  fi

  echo 'Reloading NFQWS service...'
  kill -1 $(cat "$PIDFILE")
}

firewall_start_v4() {
  if [ -z "$(iptables-save 2>/dev/null | grep "queue-num $NFQUEUE_NUM")" ]; then
    for IFACE in $ISP_INTERFACE; do
      if [ "$HTTP_ENABLED" -eq "1" ]; then
        iptables -t mangle -A POSTROUTING -o $IFACE -p tcp --dport 80 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$HTTPS_ENABLED" -eq "1" ]; then
      iptables -t mangle -A POSTROUTING -o $IFACE -p tcp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$QUIC_ENABLED" -eq "1" ]; then
      iptables -t mangle -A POSTROUTING -o $IFACE -p udp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
    done
  fi

  if [ -z "$(iptables-save 2>/dev/null | grep "0x40000000/0x40000000 -j MASQUERADE")" ]; then
    for IFACE in $ISP_INTERFACE; do
      iptables -t nat -A POSTROUTING -o $IFACE -p udp -m mark --mark 0x40000000/0x40000000 -j MASQUERADE
    done
  fi
}

firewall_stop_v4() {
  if [ -n "$(iptables-save 2>/dev/null | grep "queue-num $NFQUEUE_NUM")" ]; then
    for IFACE in $ISP_INTERFACE; do
      if [ "$HTTP_ENABLED" -eq "1" ]; then
        iptables -t mangle -D POSTROUTING -o $IFACE -p tcp --dport 80 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$HTTPS_ENABLED" -eq "1" ]; then
      iptables -t mangle -D POSTROUTING -o $IFACE -p tcp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$QUIC_ENABLED" -eq "1" ]; then
      iptables -t mangle -D POSTROUTING -o $IFACE -p udp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
    done
  fi

  if [ -n "$(iptables-save 2>/dev/null | grep "0x40000000/0x40000000 -j MASQUERADE")" ]; then
    for IFACE in $ISP_INTERFACE; do
      iptables -t nat -D POSTROUTING -o $IFACE -p udp -m mark --mark 0x40000000/0x40000000 -j MASQUERADE
    done
  fi
}

firewall_start_v6() {
  if [ "$IPV6_ENABLED" -ne "1" ]; then
    return
  fi

  if [ -z "$(ip6tables-save 2>/dev/null | grep "queue-num $NFQUEUE_NUM")" ]; then
    for IFACE in $ISP_INTERFACE; do
      if [ "$HTTP_ENABLED" -eq "1" ]; then
        ip6tables -t mangle -A POSTROUTING -o $IFACE -p tcp --dport 80 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$HTTPS_ENABLED" -eq "1" ]; then
      ip6tables -t mangle -A POSTROUTING -o $IFACE -p tcp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$QUIC_ENABLED" -eq "1" ]; then
      ip6tables -t mangle -A POSTROUTING -o $IFACE -p udp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
    done
  fi
}

firewall_stop_v6() {
  if [ "$IPV6_ENABLED" -ne "1" ]; then
    return
  fi

  if [ -n "$(ip6tables-save 2>/dev/null | grep "queue-num $NFQUEUE_NUM")" ]; then
    for IFACE in $ISP_INTERFACE; do
      if [ "$HTTP_ENABLED" -eq "1" ]; then
        ip6tables -t mangle -D POSTROUTING -o $IFACE -p tcp --dport 80 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$HTTPS_ENABLED" -eq "1" ]; then
      ip6tables -t mangle -D POSTROUTING -o $IFACE -p tcp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
      if [ "$QUIC_ENABLED" -eq "1" ]; then
      ip6tables -t mangle -D POSTROUTING -o $IFACE -p udp --dport 443 -m connbytes --connbytes-dir=original --connbytes-mode=packets --connbytes 1:8 -m mark ! --mark 0x40000000/0x40000000 -j NFQUEUE --queue-num $NFQUEUE_NUM --queue-bypass
      fi
    done
  fi
}

kernel_modules_load() {
  KERNEL=$(uname -r)

  if [ -z "$(lsmod 2>/dev/null | grep "xt_multiport ")" ]; then
    insmod /lib/modules/$KERNEL/xt_multiport.ko &> /dev/null
    echo "xt_multiport.ko loaded"
  fi

  if [ -z "$(lsmod 2>/dev/null | grep "xt_connbytes ")" ]; then
    insmod /lib/modules/$KERNEL/xt_connbytes.ko &> /dev/null
    echo "xt_connbytes.ko loaded"
  fi

  if [ -z "$(lsmod 2>/dev/null | grep "xt_NFQUEUE ")" ]; then
    insmod /lib/modules/$KERNEL/xt_NFQUEUE.ko &> /dev/null
    echo "xt_NFQUEUE.ko loaded"
  fi
}

system_config() {
  sysctl -w net.netfilter.nf_conntrack_checksum=0 &> /dev/null
  sysctl -w net.netfilter.nf_conntrack_tcp_be_liberal=1 &> /dev/null
}

status() {
  if is_running; then
    echo 'Service NFQWS is running'
  else
    echo 'Service NFQWS is stopped'
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  firewall-iptables)
    firewall_start_v4
    ;;
  firewall-ip6tables)
    firewall_start_v6
    ;;
  firewall-stop)
    firewall_stop_v4
    firewall_stop_v6
    ;;
  kernel-modules)
    kernel_modules_load
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload|status}"
esac
